apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgewize-gateway
    tier: backend
    version: {{ .Chart.AppVersion }}
  name: edgewize-gateway
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
    type: RollingUpdate
  progressDeadlineSeconds: 600
  replicas: {{ .Values.agent.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: edgewize-gateway
      tier: backend
  template:
    metadata:
      labels:
        IndexByEdgeWize: "true"
        app: edgewize-gateway
        tier: backend
    spec:
      serviceAccountName: {{ template "edgewize.serviceAccountName" . }}
      {{- include "controller.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      containers:
        - name: edgewize-gateway
          image: {{ template "edgewize-gateway.image" . }}
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          {{- if .Values.gateway.containerPorts }}
          ports: {{- include "common.tplvalues.render" (dict "value" .Values.gateway.containerPorts "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.gateway.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.gateway.command "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLOUDHUB_PORT
              value: {{ .Values.gateway.nodePort.cloudhub | quote }}
            - name: CLOUDHUBHTTPS_PORT
              value: {{ .Values.gateway.nodePort.cloudhubHttps | quote }}
            - name: TUNNEL_PORT
              value: {{ .Values.gateway.nodePort.tunnelport | quote }}
            {{- if .Values.gateway.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.gateway.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.gateway.resources }}
          resources: {{- toYaml .Values.gateway.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
            - name: edgewize-gateway-certs
              mountPath: /etc/edgewize/gateway-certs/
              readOnly: true
            - name: edgecluster-service
              mountPath: /etc/edgewize/edgecluster-services/
          {{- if .Values.gateway.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.gateway.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      volumes:
        - name: edgewize-gateway-certs
          secret:
            secretName: edgewize-gateway-certs
            defaultMode: 420
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ""
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: edgewize-controller-manager-webhook-cert
        - name: edgecluster-service
          configMap:
            name: edgecluster-service
        {{- if .Values.controller.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.controller.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.gateway.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.gateway.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
