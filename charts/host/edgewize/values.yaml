## @param global.imageRegistry Global Docker image registry
## @param global.tag Global Docker image tag
global:
  imageRegistry: ""
  tag: v0.7.0
  imagePullSecrets: [ ]
  # - secretName


## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: { }
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: { }

role: host

adminPassword: ""

config:
  # Specifies whether the edgewize-config configmap should be created
  create: true
  authentication:
    oauthOptions:
      clients:
        - name: edgewize
          secret: edgewize
          redirectURIs:
            - '*'
  # Jwt Secret is required by edgewize-apiserver, a random string would be generated if it's empty
  jwtSecret: "edgewize"
  multicluster: { }
  monitoring: { }
  # alerting.thanosRulerEndpoint is required for Edge cluster
  alerting: { }
  notification: { }

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "edgewize"

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 60
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 60

affinity: { }

nodeSelector: { }

## deployment specific configuration

apiserver:
  replicaCount: 1
  image:
    registry: ""
    repository: kubesphere/edgewize-apiserver
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: [ ]
  ## @param containerPorts [array] List of container ports to enable in the edgewize-apiserver container
  ##
  containerPorts:
    - protocol: TCP
      containerPort: 9090
  nodePort:
  ## edgewize-apiserver resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param resources.limits The resources limits for the haproxy containers
  ## @param resources.requests The requested resources for the haproxy containers
  ##
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi
  ## @param command Override default container command (useful when using custom images)
  ##
  command:
    - edgewize-apiserver
  ## @param extraEnvVars Array with extra environment variables to add to haproxy nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: [ ]
  ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the haproxy container(s)
  ##
  extraVolumeMounts: [ ]
  ## @param extraVolumes Optionally specify extra list of additional volumes for the haproxy pod(s)
  ##
  extraVolumes: [ ]

controller:
  replicaCount: 1
  image:
    registry: ""
    repository: kubesphere/edgewize-controller-manager
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: [ ]
  ## @param containerPorts [array] List of container ports to enable in the edgewize-apiserver container
  ##
  containerPorts:
    - containerPort: 8080
      protocol: TCP
    - containerPort: 8443
      protocol: TCP
  ## @param resources.limits The resources limits for the haproxy containers
  ## @param resources.requests The requested resources for the haproxy containers
  ##
  resources:
    limits:
      cpu: 1
      memory: 1000Mi
    requests:
      cpu: 30m
      memory: 50Mi
  ## @param command Override default container command (useful when using custom images)
  ##
  command:
    - controller-manager
    - '-v=10'
  ## @param extraEnvVars Array with extra environment variables to add to haproxy nodes
  ##
  extraEnvVars: [ ]
  ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the haproxy container(s)
  ##
  extraVolumeMounts: [ ]
  ## @param extraVolumes Optionally specify extra list of additional volumes for the haproxy pod(s)
  ##
  extraVolumes: [ ]

certificateAuthority: # CA certificate for the gateway, optional, if not set, it will generate a self-signed certificate
  crt: "" # base64 encoded ca crt
  key: "" # base64 encoded ca key

whizardEdgeGateway:
  advertiseAddress:
    - "192.168.1.1"
  dnsNames:
    - gateway.edgewize.io
  replicas: 3
  nodePort: 30991
  image:
    registry: ""
    repository: kubesphere/whizard-edge-gateway
    tag: "v0.3.3"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: [ ]

gateway:
  advertiseAddress:
    - "192.168.1.1"
  dnsNames:
    - gateway.edgewize.io
  replicaCount: 1
  image:
    registry: ""
    repository: kubesphere/edgewize-gateway
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: [ ]
  ## @param containerPorts [array] List of container ports to enable in the edgewize-apiserver container
  ##
  containerPorts:
    - protocol: TCP
      containerPort: 30000
    - protocol: TCP
      containerPort: 30002
    - protocol: TCP
      containerPort: 30004
    - protocol: TCP
      containerPort: 30080
  nodePort:
    cloudhub: 30000
    cloudhubHttps: 30002
    tunnelport: 30004
    otaport: 30080
  ## edgewize-apiserver resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param resources.limits The resources limits for the haproxy containers
  ## @param resources.requests The requested resources for the haproxy containers
  ##
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi
  ## @param command Override default container command (useful when using custom images)
  ##
  command:
    - edgewize-gateway
  ## @param extraEnvVars Array with extra environment variables to add to haproxy nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: [ ]
  ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the haproxy container(s)
  ##
  extraVolumeMounts: [ ]
  ## @param extraVolumes Optionally specify extra list of additional volumes for the haproxy pod(s)
  ##
  extraVolumes: [ ]

agent:
  replicaCount: 1

values:
  vcluster: # for k3s, k8s ,k0s
    sync:
      hoststorageclasses:
        enabled: false
    defaultImageRegistry: ""
    storage:
      persistence: true
      provisioning: "dynamic" # static or dynamic, default is dynamic
      className: ""
      selector:
        matchLabels:
          edgecluster.edgewize.io/name: $name
    serviceAccount:
      imagePullSecrets:
        - name: edge-deploy-secret
    etcd:
      global:
        imageRegistry: ""
        imagePullSecrets:
          - edge-deploy-secret
        storageClass: ""
  whizardEdgeAgent:
    whizard_edge_proxy:
      edge_gateway_address: ""
    prometheus:
      storage:
        className: ""
        prometheus_pv_size: "20Gi"
    defaultImageRegistry: ""
    imagePullSecrets:
      - name: edge-deploy-secret
  fluentOperator:
    defaultImageRegistry: ""
    operator:
      imagePullSecrets:
        - name: edge-deploy-secret
    fluentbit:
      imagePullSecrets:
        - name: edge-deploy-secret
    fluentd:
      imagePullSecrets:
        - name: edge-deploy-secret
  cloudcore:
    defaultImageRegistry: ""
    cloudCore:
      modules:
        cloudHub:
          customCert: true # 挂载自定义证书
      service:
        type: "ClusterIP" # NodePort
        cloudhubNodePort: "30000"
        cloudhubQuicNodePort: "30001"
        cloudhubHttpsNodePort: "30002"
        cloudstreamNodePort: "30003"
        tunnelNodePort: "30004"
      image:
        repository: "kubesphere/cloudcore"
        tag: "v1.13.0-edgewize"
        pullSecrets:
          - name: edge-deploy-secret
  edgeOtaServer:
    defaultImageRegistry: ""
    imagePullSecrets:
      - name: edge-deploy-secret
    service:
      type: "ClusterIP" # NodePort
      port: 80
    image:
      repository: kubesphere/edge-ota-server
      pullPolicy: IfNotPresent
      tag: "v0.1.0"
  edgewize:
    global:
      imageRegistry: ""
      tag: v0.7.0
      imagePullSecrets:
        - edge-deploy-secret
    apiserver:
      image:
        registry: ""
        repository: kubesphere/edgewize-apiserver
        tag: ""
        digest: ""
        pullPolicy: IfNotPresent
    controller:
      image:
        registry: ""
        repository: kubesphere/edgewize-controller-manager
        tag: ""
        digest: ""
        pullPolicy: IfNotPresent
  ksCore:
    defaultImageRegistry: ""
    image:
      ks_apiserver_tag: kse-release-3.3-abc
      ks_console_tag: kse-release-3.3-abc
      ks_controller_manager_tag: kse-release-3.3-abc
      pullPolicy: IfNotPresent
    config:
      create: true
      jwtSecret: ""
      multicluster:
        enabled: true
        clusterRole: member
    kube_version: v1.23.5+k3s1
    imagePullSecrets:
      - name: edge-deploy-secret
    console:
      port: 30881
      type: ClusterIP
  kubefed:
    controllermanager:
      defaultImageRegistry: "harbor.wuxs.vip/"
      imagePullSecrets:
        - name: edge-deploy-secret
      commonAffinity: { }
      commonNodeSelector: { }
      commonTolerations: [ ]
      controller:
        annotations: { }
        image: kubefed
        replicaCount: 1
        repository: kubesphere
        tag: v0.8.1
      postInstallJob:
        image: kubectl
        repository: kubesphere
        tag: v1.22.0
      webhook:
        image: kubefed
        repository: kubesphere
        tag: v0.8.1
