## @param global.imageRegistry Global Docker image registry
## @param global.tag Global Docker image tag
global:
  imageRegistry:
  tag: v0.4.2
  imagePullSecrets: []

edgeClusterName: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

role: host

adminPassword: ""

clusterName: beijing

config:
  # Specifies whether the edgewize-config configmap should be created
  create: true
  authentication:
    oauthOptions:
      clients:
        - name: edgewize
          secret: edgewize
          redirectURIs:
            - '*'
  # Jwt Secret is required by edgewize-apiserver, a random string would be generated if it's empty
  jwtSecret: "edgewize"
  multicluster: {}
  monitoring: {}
  alerting: {}
  notification: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "router-manager-service-account"

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 60
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 60

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/edge
              operator: DoesNotExist

nodeSelector: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## deployment specific configuration

apiserver:
  name: "router-apiserver"
  version: "v0.0.1"
  replicaCount: 1
  image:
    registry: ""
    repository: edgewize/router-apiserver
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.9.0"
  nodePort:
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 20m
      memory: 100Mi
  extraEnvVars: []
  extraVolumeMounts: []
  extraVolumes: []

controller:
  name: "router-controller"
  version: "v0.0.1"
  replicaCount: 1
  image:
    registry: ""
    repository: edgewize/router-controller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.9.0"
  nodePort:
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 20m
      memory: 100Mi
  extraEnvVars: []
  extraVolumeMounts: []
  extraVolumes: []

agent:
  replicaCount: 1

volumeMounts:
  - name: host-time
    readOnly: true
    mountPath: /etc/localtime
  - name: router-controller-webhook-cert
    mountPath: /tmp/k8s-webhook-server/serving-certs

routerManager:
  replicaCount: 1
  image:
    registry: ""
    repository: edgewize/router-manager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.9.0"
  resources: {}
  imagePullSecrets: []
  defaultUserName: admin
  defaultPassword: P@89w0rd
  service:
    type: ClusterIP
    port: 8000

routerManagerEdge:
  image:
    registry: ""
    repository: edgewize/router-manager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.9.0"
  resources: {}
