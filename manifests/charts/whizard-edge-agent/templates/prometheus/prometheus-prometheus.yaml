apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 2.39.1
  name: k8s
  namespace: kubesphere-monitoring-system
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: node-role.kubernetes.io/monitoring
            operator: Exists
        weight: 100
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: k8s
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: kube-prometheus
          namespaces:
          - kubesphere-monitoring-system
          topologyKey: kubernetes.io/hostname
        weight: 100
  evaluationInterval: 1m
  externalLabels: {}
  image: {{ .Values.defaultImageRegistry }}prom/prometheus:v2.39.1
  {{ if .Values.imagePullSecrets }}
  imagePullSecrets:
  {{ toYaml .Values.imagePullSecrets | indent 4 }}
  {{ end }}

  nodeSelector:
    kubernetes.io/os: linux
  podMetadata:
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 2.39.1
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  probeNamespaceSelector: {}
  probeSelector: {}
  remoteWrite:
    - url: http://whizard-agent-proxy.kubesphere-monitoring-system.svc:9090/api/v1/receive
  containers:
    - name: prometheus
      args:
        - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
        - --storage.agent.path=/prometheus
        - --enable-feature=agent
        - --web.enable-lifecycle
        - --web.enable-remote-write-receiver
  replicas: 1
  resources:
    limits:
      cpu: "4"
      memory: 16Gi
    requests:
      cpu: 200m
      memory: 400Mi
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: {{ .Values.prometheus.storage.className }}
        resources:
          requests:
            storage: {{ .Values.prometheus.storage.prometheus_pv_size }}
  version: 2.39.1
